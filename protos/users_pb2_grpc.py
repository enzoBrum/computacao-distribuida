# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import users_pb2 as users__pb2


class UsersStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/Users/Create',
                request_serializer=users__pb2.UserAuth.SerializeToString,
                response_deserializer=users__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/Users/Delete',
                request_serializer=users__pb2.UserAuth.SerializeToString,
                response_deserializer=users__pb2.Empty.FromString,
                )
        self.Auth = channel.unary_unary(
                '/Users/Auth',
                request_serializer=users__pb2.UserAuth.SerializeToString,
                response_deserializer=users__pb2.AuthReply.FromString,
                )
        self.GetInformation = channel.unary_unary(
                '/Users/GetInformation',
                request_serializer=users__pb2.InformationRequest.SerializeToString,
                response_deserializer=users__pb2.InformationReply.FromString,
                )


class UsersServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Create(self, request, context):
        """
        Cria um usuário e armazena suas credenciais na base de dados.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Delete um usuário, o removendo da base de dados. Além disso, deve remover todos os seus votos.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Auth(self, request, context):
        """autentica um usuário. I.e: fala se há um usuário com email e senha iguais aos recebidos.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInformation(self, request, context):
        """retorna informações relacionadas à um usuário
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UsersServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=users__pb2.UserAuth.FromString,
                    response_serializer=users__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=users__pb2.UserAuth.FromString,
                    response_serializer=users__pb2.Empty.SerializeToString,
            ),
            'Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.Auth,
                    request_deserializer=users__pb2.UserAuth.FromString,
                    response_serializer=users__pb2.AuthReply.SerializeToString,
            ),
            'GetInformation': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInformation,
                    request_deserializer=users__pb2.InformationRequest.FromString,
                    response_serializer=users__pb2.InformationReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'Users', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Users(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/Create',
            users__pb2.UserAuth.SerializeToString,
            users__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/Delete',
            users__pb2.UserAuth.SerializeToString,
            users__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/Auth',
            users__pb2.UserAuth.SerializeToString,
            users__pb2.AuthReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInformation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/Users/GetInformation',
            users__pb2.InformationRequest.SerializeToString,
            users__pb2.InformationReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
