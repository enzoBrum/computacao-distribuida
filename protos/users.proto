syntax = "proto3";

service Users {
    
    /*
    Cria um usuário e armazena suas credenciais na base de dados.
    */
    rpc Create(UserAuth) returns (Empty) {}
    
    // Delete um usuário, o removendo da base de dados. Além disso, deve remover todos os seus votos.
    rpc Delete(Credentials) returns (Empty) {}
    
    // autentica um usuário. I.e: fala se há um usuário com email e senha iguais aos recebidos.
    rpc Auth(Credentials) returns (User) {}

    // recebe email e senha, retorna access token
    rpc GetToken(UsernamePassword) returns (AccessToken) {}
}

/* Um usuário do serviço */
message User {
    string name = 1;
    string email = 2;
    optional int32 id = 3;
}

message UsernamePassword {
    string username = 1;
    string password = 2;
}

message AccessToken {
    string token = 1;
}

message Credentials {
    // autenticação convencional
    optional UsernamePassword username_password = 1;
    
    // token
    optional AccessToken access_token = 2;
}

message UserAuth {
    User user = 1;
    Credentials credentials = 2;
}

message AuthReply {
    optional string access_token = 1;
}

message Empty {

}
