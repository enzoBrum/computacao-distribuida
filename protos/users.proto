syntax = "proto3";

service Users {
    
    /*
    Cria um usuário e armazena suas credenciais na base de dados.
    */
    rpc Create(UserAuth) returns (Empty) {}
    
    // Delete um usuário, o removendo da base de dados. Além disso, deve remover todos os seus votos.
    rpc Delete(UserAuth) returns (Empty) {}
    
    // autentica um usuário. I.e: fala se há um usuário com email e senha iguais aos recebidos.
    rpc Auth(UserAuth) returns (AuthReply) {}
    
    // retorna informações relacionadas à um usuário
    rpc GetInformation(InformationRequest) returns (InformationReply) {}
}

/* Um usuário do serviço */
message User {
    string name = 1;
    string email = 2;
    optional int32 id = 3;
}

message Credentials {
    // autenticação convencional
    optional string password = 1;
    
    // Identidade Federada.
    optional string acess_token = 2;
}

message UserAuth {
    User user = 1;
    Credentials credentials = 2;
}


message AuthReply {
    bool result = 1;
}

message InformationRequest {
    UserAuth user_auth = 1;    
    string information = 2;
}

message InformationReply {
    optional string information = 1;
}

message Empty {

}
